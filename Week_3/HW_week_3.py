
# coding: utf-8

# 1. В диапазоне натуральных чисел от 2 до 99 определить, сколько из них кратны каждому из чисел в диапазоне от 2 до 9.

a = [0, 0, 0, 0, 0, 0, 0, 0] # создаем массив, в котором будут храниться кратные числа 1-я позиция для кратных 2, последняя - 9 
for i in range(2,100): # Итерируемся по диапазону
    for j in range(2,10): # Для каждого числа из диапазона последовательно проверяем его кратность с числами от 2 до 9
        if i%j == 0:
            a[j-2] += 1 # При достижении условия кратности, записываем число в нужную позицию массива
i = 0
while i < len(a): # Выводим данные из массива
    print(i+2, ' : ', a[i])
    i += 1


# 2. Во втором массиве сохранить индексы четных элементов первого массива. Например, если дан массив со значениями 8, 3, 15, 6, 4, 2, то во второй массив надо заполнить значениями 1, 4, 5, 6 (или 0, 3, 4, 5 - если индексация начинается с нуля), т.к. именно в этих позициях первого массива стоят четные числа. 

from random import random

data = [0]*10 # Создаем рабочий массив из 10 элементов
even = [] # Массив для сохранения четных элементов
for i in range(10): # Для каждого элемента из массива проверяем его четность и заносим его во второй массив при соответствии условиям
    data[i] = int(random() * 10) + 10
    if data[i] % 2 == 0:
        even.append(i)
print(data) # Выводим первый массив массив
print('Индексы четных элементов: ', even) # Выводим второй массив 

# 3. В массиве случайных целых чисел поменять местами минимальный и максимальный элементы.

from random import random

# Создаем переменные для минимального, максимального значения и массив произвольной длины (10)
n_min = 0
n_max = 0
data = [0]*10

print("Сгенеренный массив:", end=' ')
for i in range(10): # Заполняем список случайными числами от 0 до 50 и выводим его на экран
    data[i] = int(random()*50)
    print(data[i],end=' ') # Выводим получившийся массив
print()

for i in range(10): # Итерируемся по полученному массиву и ищем макс и мин значения, записываем их в переменные, выводим на экран
    if data[i] < data[n_min]:
        n_min = i
    elif data[i] > data[n_max]:
        n_max = i
print(f"Минимальное число: {data[n_min]}, Максимальное число: {data[n_max]}")

# Меняем местами наибольший элемент с наименьшим
tmp = data[n_min]  # Помещаем максимальное значение в переменную
data[n_min] = data[n_max] # Помещаем минимальное значение в позицию максимального
data[n_max] = tmp # Помещаем данные из временной переменной (макс) в начальную позицию 
 
print("Измененный массив: ", end = ' ') 
for i in range(10): # Выводим результат на экран
    print(data[i],end=' ')
print()


# 4. Определить, какое число в массиве встречается чаще всего.

from random import random

data = [0]*15 # Создаем массив произвольной длины

print("Сгенеренный массив:", end=' ')

for i in range(15): # Заполняем массив случайными числами и выводим его на экран
    data[i] = int(random()*10) 
print(data)

q = [0] # Буфер для хранения уникальных чисел в массиве
max_freq = 1 # Буфер для частоты совпадений

for i in range(14): # Итерируясь по каждому числу из массива записываем количество совпадений в буфер-массив
    freq = 1
    for j in range(i+1,15):
        if data[i] == data[j]:
            freq += 1
    if freq > max_freq:
        max_freq = freq
        q = data[i]

print(f"Число {q} встречается наибольшее количество раз {max_freq}")


# 5. В массиве найти максимальный отрицательный элемент. Вывести на экран его значение и позицию в массиве.

from random import random
data = [] # Создаем пустой массив
for i in range(15): # Заполняем массив 15 случайными числами от -50 до 50
        data.append(int(random() * 100) - 50)
print(data) # Выводим массив на экран

# Блок для поиска наибольшего отрицательного элемента в массиве
i = 0
index = -1 # Переменная для наибольшего отрицательного элемента
while i < 15: # Проверяем каждое отрицательное число
        if data[i] < 0 and index == -1: # Выражение для первой итерации отрицательного числа.
                index = i
        elif data[i] < 0 and data[i] > data[index]: # Обновляем переменную если найдено отрицательное число > записанного
                index = i
        i += 1
 
print(f" Наибольший отрицательный элемент: {data[index]} в позиции {index+1}")


# 6. В одномерном массиве найти сумму элементов, находящихся между минимальным и максимальным элементами. Сами минимальный и максимальный элементы в сумму не включать.

from random import random

a = [0]*10
print("Сгенерированный массив:", end=' ') # Генерируем массив от 1 до 50
for i in range(10):
    a[i] = int(random()*50)
    print(f"{a[i]} ", end='')
print()

min_id = 0
max_id = 0
for i in range(1,10): # Обновляем переменные для минимального и максимального значения
    if a[i] < a[min_id]:
        min_id = i 
    elif a[i] > a[max_id]:
        max_id = i
print(f"Минимальный элемент: {a[min_id]}, максимальный - {a[max_id]}")

if min_id > max_id:
    min_id, max_id = max_id, min_id

summ = 0
for i in range(min_id+1, max_id): # Рассчитываем сумму элементов между минимальным и максимальным значениях элементов
    summ += a[i]
print(f"Сумма элементов между ними: {summ}")


# 7. В одномерном массиве целых чисел определить два наименьших элемента. Они могут быть как равны между собой (оба являться минимальными), так и различаться.

from random import random
a = []

print("Сгенерированный массив:", end=' ')
for i in range(10): # Генерируем случайный массив
    a.append(int(random()*100))
    print(f"{a[i]} ", end='')
print()
 
if a[0] > a[1]: # Сравниваем два первых элемента массива
    min1 = 0
    min2 = 1
else:
    min1 = 1
    min2 = 0
    
for i in range(2,10): # Итерируясь по массиву обновляем минимальную и максимальную переменные
    if a[i] < a[min1]:
        b = min1
        min1 = i
        if a[b] < a[min2]:
            min2 = b
    elif a[i] < a[min2]:
        min2 = i
        
print(f"Первый наменьший элемент - поз. {min1+1}: {a[min1]}")
print(f"Второй наменьший элемент - поз. {min2+1}: {a[min2]}")


# 8. Матрица 5x4 заполняется вводом с клавиатуры кроме последних элементов строк. Программа должна вычислять сумму введенных элементов каждой строки и записывать ее в последнюю ячейку строки. В конце следует вывести полученную матрицу.

M = 5
N = 4
a = []
for i in range(N):
    b = []
    s = 0
    print(f"{i}-я строка:")
    for j in range(M-1): # Пользовательский ввод элементов 1,2 и 3-й строки матрицы
        n = int(input())
        s += n # Суммируем значения элементов 1-х трех строк для каждой строки матрицы
        b.append(n)
    b.append(s)
    a.append(b)
 
for i in a: # Выводим на экран получившуюся матрицу
    print(i)


# 9. Найти максимальный элемент среди минимальных элементов столбцов матрицы.

from random import random
M = 10
N = 5
a = []
for i in range(N): # Создаем пустую матрицу
    b = []
    for j in range(M): # Заполняем случайными значениями выводим на экран
        n = int(random()*200)
        b.append(n)
        print(f"{n} ",end='') 
    a.append(b)
    print()
 
n_max = -1
for j in range(M): # Определяем минимальное значение для каждой позиции
    n_min = 200
    for i in range(N):
        if a[i][j] < n_min:
            n_min = a[i][j]
    if n_min > n_max: # Определяем максимальное значение среди минимальных
        n_max = n_min
print("Максимальный среди минимальных: ", n_max)

